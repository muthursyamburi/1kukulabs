Requirements
============
There is a board consisting of a triangle and a three lined box across the triangle, creating a total of 27 junctions. -- nouns = board [triangle, box], triangle[3 lines], box[1 line], junctions. 
There are a total of 18 playing coins out of which 3 are puli and rest 15 are naaya. -- nouns = coins[puli, naya], puli, naaya.
Each junction has an adjacent junction connected to it. -- nouns = junction [adjacent jn]
At a time, any coin can move only to its nearby junction only.  -- coin [move()]
At each junction, there are some defined directions - N, E, W, S -- nouns - junction [directions - N,E,W,S]
Out of those 27 junctions, 1 junction (the top most) is called kompu and it has only one direction (that is S) to move but five possible positions, 6 junctions have two directions, 5 junctions have three directions and rest 15 junctions have four directions to move. 
Each player moves his coin once and then gives the turn to the other player to move his/her coin -- nouns - player[turn], playing person
When a naya comes to the adjacent junction of a puli, and if there are no other naya in the next junction in the same direction of puli's movement, puli can jump over the naya and that is treated as puli eating the naya -- nouns - puli [current position, old position, move(), eat()], naya[move()]
If there is another naya there, puli cant eat him and need to check for another possible junction to move -- noun -- naya[current position, old position, support(), move()]
Puli player can move the same coin back and forth for any number of time
Naaya player cannot move the same coin back and forth
Also when naya is in the pray situation/state, that naya is considered as frozen and cant move. Only the naya player can save the naya by moving another naya to his support -- nouns - naya [state - frozen/free],
When all the three puli are blocked by naya, naya player wins. -- nouns - puli [state - blocked/free], naya player[wins] 
When puli eats all the naya, puli player wins --  nouns - naya[state - died], puli player[wins]

Nouns
========
board
	-graph[]
	-background
	-player[]
	-zoom_pixels
	+draw()
	+play()
	+declare_winner()

node
	x, y, radius, multiplier (default 20 pixels)
	directions[] - N[], E[], W[], S[]
	coin object

kompu node - a node whos size of South node is greater than 1

coin
	puli_coin
		+state - blocked/free
		+current position - node
		+previous position - node
		+move(dir)
		+eat()
		+redraw()
		-show()
		-hide()

	naya_coin
		+state - blocked/frozen/free/dead/place
		+current position
		+previous position
		+move(dir)
		+support()
		+redraw()
		-show()
		-hide()

player
	-name = naya / puli
	-coins[]
	+won()

1. draw the board
2. ask user to select the coin
2.1 If puli, ask player to choose 3 positions
2.2 If naya, player can choose to place the naya whereever he wants one at a time when his turn comes
3. board.play()
	1. do
	2.   player=naya then puli
	3.   player.play()
	4.   player = naya.won()
	5.   if(player == none)
	6		player = puli.won()
	7. while(player == none)
4. board.declare_winner(player)


Board Graph
==============
graph = {
"1": [3, 4, 5, 6, 7],
"2": [3, 9],
"3": [1, 2, 4, 10],
"4": [1, 3, 5, 11],
"5": [1, 4, 6, 12],
"6": [1, 5, 7, 13],
"7": [1, 6, 8, 14],
"8": [7, 15],
"9": [2, 10, 16],
"10": [3, 9, 11, 17],
"11": [4, 10, 12, 18],
"12": [5, 11, 13, 19],
"13": [6, 12, 14, 20],
"14": [7, 13, 15, 21],
"15": [8, 14, 22],
"16": [9, 17],
"17": [10, 16, 18, 23],
"18": [11, 17, 19, 24],
"19": [12, 18, 20, 25],
"20": [13, 19, 21, 26],
"21": [14, 20, 22, 27],
"22": [15, 21],
"23": [17, 24],
"24": [18, 23, 25],
"25": [19, 24, 26],
"26": [20, 25, 27],
"27": [21, 26]
}

<svg id="grid" height="800" width="850" border="1" bordercolor='black'>
	<path id="line1" d="M 200 20 l -160 380" stroke="red" stroke-width="3" fill="none" />
	<path id="line2" d="M 40 400 l 80 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line3" d="M 120 400 l 80 -380" stroke="red" stroke-width="3" fill="none" />
	<path id="line1" d="M 200 20 l 0 380" stroke="red" stroke-width="3" fill="none" />
	<path id="line2" d="M 200 400 l -80 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line2" d="M 120 400 l 160 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line3" d="M 280 400 l -80 -380" stroke="red" stroke-width="3" fill="none" />	
	<path id="line4" d="M 200 20 l 160 380" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 360 400 l -80 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 40 160 l 320 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 360 210 l -320 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 40 260 l 320 0" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 40 160 l 0 100" stroke="red" stroke-width="3" fill="none" />
	<path id="line4" d="M 360 160 l 0 100" stroke="red" stroke-width="3" fill="none" />

	<g stroke="black" stroke-width="3" fill="black">
	    <circle id="pointA" cx="200" cy="20" r="3" />
	    <circle id="pointB" cx="140" cy="160" r="3" />
	    <circle id="pointC" cx="40" cy="160" r="3" />
	    <circle id="pointA" cx="40" cy="210" r="3" />
	    <circle id="pointB" cx="40" cy="260" r="3" />
	    <circle id="pointC" cx="99" cy="260" r="3" />
	    <circle id="pointA" cx="120" cy="210" r="3" />
	    <circle id="pointB" cx="140" cy="160" r="3" />
	    <circle id="pointC" cx="40" cy="400" r="3" />
	    <circle id="pointA" cx="120" cy="400" r="3" />
	    <circle id="pointB" cx="150" cy="260" r="3" />
	    <circle id="pointB" cx="160" cy="210" r="3" />
	    <circle id="pointC" cx="170" cy="160" r="3" />
	    <circle id="pointA" cx="200" cy="160" r="3" />
	    <circle id="pointB" cx="200" cy="210" r="3" />
	    <circle id="pointC" cx="200" cy="260" r="3" />
	    <circle id="pointC" cx="200" cy="400" r="3" />
	    
	    <circle id="pointC" cx="280" cy="400" r="3" />
	    <circle id="pointC" cx="250" cy="260" r="3" />
	    <circle id="pointA" cx="240" cy="210" r="3" />
	    <circle id="pointB" cx="230" cy="160" r="3" />
	    <circle id="pointB" cx="260" cy="160" r="3" />
	    <circle id="pointC" cx="280" cy="210" r="3" />
	    <circle id="pointA" cx="300" cy="260" r="3" />
	    <circle id="pointB" cx="360" cy="400" r="3" />
	    <circle id="pointC" cx="360" cy="260" r="3" />
	    <circle id="pointC" cx="360" cy="210" r="3" />
	    <circle id="pointC" cx="360" cy="160" r="3" />
  	</g>
 </svg>